name: Build

on:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      # cargo-tarpaulin@0.30.0 breaks the build last time around.
      - run: cargo install cargo-tarpaulin@0.29.2
      - run: make lint
      - run: make test.coverage.lcov
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  build-image:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - id: variables
        run: |
          rust_version=$(grep channel rust-toolchain.toml | cut -d '=' -f2 | xargs)
          
          echo "rust-version=${rust_version}" >> "${GITHUB_OUTPUT}"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Build, tag and publish docker image
        id: docker-publish
        uses: infra-blocks/docker-publish-action@v1
        with:
          build-arguments: '{"RUST_VERSION": "${{ steps.variables.outputs.rust-version }}"}'
          service: action
          tags: '["git-sha-${{ github.sha }}"]'
      - name: Show published images
        run: |
          echo "${{ steps.docker-publish.outputs.published }}"
  self-test:
    runs-on: ubuntu-22.04
    needs:
      - build-image
    steps:
      - uses: jenseng/dynamic-uses@v1
        id: self-test
        with:
          uses: docker://public.ecr.aws/${{ github.repository }}:git-sha-${{ github.sha }}
          with: '{"example-input": "hello"}'
      - name: Show outputs
        run: |
          # To respect nested stringified objects, we need to properly escape quotes.
          echo -e ${{ toJson(steps.self-test.outputs.outputs) }}
